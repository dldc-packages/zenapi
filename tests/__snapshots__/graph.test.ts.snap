export const snapshot = {};

snapshot[`todolist snapshot structure 1`] = `
{
  key: "root",
  kind: "root",
  types: [
    {
      key: "root.PaginationParams",
      kind: "interface",
      name: "PaginationParams",
      parameters: [],
      properties: [
        {
          name: "page",
          optional: true,
          structure: {
            key: "root.PaginationParams.page",
            kind: "primitive",
            type: "number",
          },
        },
        {
          name: "limit",
          optional: true,
          structure: {
            key: "root.PaginationParams.limit",
            kind: "primitive",
            type: "number",
          },
        },
      ],
    },
    {
      key: "root.User",
      kind: "interface",
      name: "User",
      parameters: [],
      properties: [
        {
          name: "userName",
          optional: false,
          structure: {
            key: "root.User.userName",
            kind: "primitive",
            type: "string",
          },
        },
        {
          name: "app",
          optional: false,
          structure: {
            key: "root.User.app",
            kind: "ref",
            params: [],
            ref: "App",
          },
        },
      ],
    },
    {
      key: "root.App",
      kind: "interface",
      name: "App",
      parameters: [],
      properties: [
        {
          name: "appName",
          optional: false,
          structure: {
            key: "root.App.appName",
            kind: "primitive",
            type: "string",
          },
        },
        {
          name: "todos",
          optional: false,
          structure: {
            items: {
              key: "root.App.todos.items",
              kind: "ref",
              params: [],
              ref: "Todo",
            },
            key: "root.App.todos",
            kind: "array",
          },
        },
      ],
    },
    {
      key: "root.Todo",
      kind: "interface",
      name: "Todo",
      parameters: [],
      properties: [
        {
          name: "todoName",
          optional: false,
          structure: {
            key: "root.Todo.todoName",
            kind: "primitive",
            type: "string",
          },
        },
        {
          name: "done",
          optional: false,
          structure: {
            key: "root.Todo.done",
            kind: "primitive",
            type: "boolean",
          },
        },
      ],
    },
    {
      key: "root.CoinHeads",
      kind: "interface",
      name: "CoinHeads",
      parameters: [],
      properties: [
        {
          name: "foo",
          optional: false,
          structure: {
            key: "root.CoinHeads.foo",
            kind: "primitive",
            type: "string",
          },
        },
      ],
    },
    {
      key: "root.CoinTails",
      kind: "interface",
      name: "CoinTails",
      parameters: [],
      properties: [
        {
          name: "bar",
          optional: false,
          structure: {
            key: "root.CoinTails.bar",
            kind: "primitive",
            type: "string",
          },
        },
      ],
    },
    {
      key: "root.Config",
      kind: "interface",
      name: "Config",
      parameters: [],
      properties: [
        {
          name: "env",
          optional: false,
          structure: {
            key: "root.Config.env",
            kind: "object",
            properties: [
              {
                name: "version",
                optional: false,
                structure: {
                  key: "root.Config.env.version",
                  kind: "primitive",
                  type: "string",
                },
              },
              {
                name: "num",
                optional: false,
                structure: {
                  key: "root.Config.env.num",
                  kind: "primitive",
                  type: "number",
                },
              },
              {
                name: "str",
                optional: false,
                structure: {
                  key: "root.Config.env.str",
                  kind: "primitive",
                  type: "string",
                },
              },
              {
                name: "bool",
                optional: false,
                structure: {
                  key: "root.Config.env.bool",
                  kind: "primitive",
                  type: "boolean",
                },
              },
            ],
          },
        },
      ],
    },
    {
      key: "root.Graph",
      kind: "interface",
      name: "Graph",
      parameters: [],
      properties: [
        {
          name: "auth",
          optional: false,
          structure: {
            key: "root.Graph.auth",
            kind: "nullable",
            type: {
              key: "root.Graph.auth.type",
              kind: "object",
              properties: [
                {
                  name: "user",
                  optional: false,
                  structure: {
                    key: "root.Graph.auth.type.user",
                    kind: "ref",
                    params: [],
                    ref: "User",
                  },
                },
              ],
            },
          },
        },
        {
          name: "users",
          optional: false,
          structure: {
            key: "root.Graph.users",
            kind: "object",
            properties: [
              {
                name: "byId",
                optional: false,
                structure: {
                  arguments: {
                    arguments: [
                      {
                        name: "id",
                        optional: false,
                        structure: {
                          key: "root.Graph.users.byId.arguments.id",
                          kind: "primitive",
                          type: "string",
                        },
                      },
                    ],
                    key: "root.Graph.users.byId.arguments",
                    kind: "arguments",
                  },
                  key: "root.Graph.users.byId",
                  kind: "function",
                  returns: {
                    key: "root.Graph.users.byId.returns",
                    kind: "ref",
                    params: [],
                    ref: "User",
                  },
                },
              },
            ],
          },
        },
        {
          name: "apps",
          optional: false,
          structure: {
            key: "root.Graph.apps",
            kind: "object",
            properties: [
              {
                name: "all",
                optional: false,
                structure: {
                  arguments: {
                    arguments: [
                      {
                        name: "pagination",
                        optional: true,
                        structure: {
                          key: "root.Graph.apps.all.arguments.pagination",
                          kind: "ref",
                          params: [],
                          ref: "PaginationParams",
                        },
                      },
                    ],
                    key: "root.Graph.apps.all.arguments",
                    kind: "arguments",
                  },
                  key: "root.Graph.apps.all",
                  kind: "function",
                  returns: {
                    items: {
                      key: "root.Graph.apps.all.returns.items",
                      kind: "ref",
                      params: [],
                      ref: "App",
                    },
                    key: "root.Graph.apps.all.returns",
                    kind: "array",
                  },
                },
              },
              {
                name: "byId",
                optional: false,
                structure: {
                  arguments: {
                    arguments: [
                      {
                        name: "id",
                        optional: false,
                        structure: {
                          key: "root.Graph.apps.byId.arguments.id",
                          kind: "primitive",
                          type: "string",
                        },
                      },
                    ],
                    key: "root.Graph.apps.byId.arguments",
                    kind: "arguments",
                  },
                  key: "root.Graph.apps.byId",
                  kind: "function",
                  returns: {
                    key: "root.Graph.apps.byId.returns",
                    kind: "ref",
                    params: [],
                    ref: "App",
                  },
                },
              },
            ],
          },
        },
        {
          name: "flip",
          optional: false,
          structure: {
            key: "root.Graph.flip",
            kind: "union",
            types: [
              {
                key: "root.Graph.flip.0",
                kind: "ref",
                params: [],
                ref: "CoinHeads",
              },
              {
                key: "root.Graph.flip.1",
                kind: "ref",
                params: [],
                ref: "CoinTails",
              },
            ],
          },
        },
        {
          name: "config",
          optional: false,
          structure: {
            key: "root.Graph.config",
            kind: "ref",
            params: [],
            ref: "Config",
          },
        },
      ],
    },
  ],
}
`;

snapshot[`snapshot structure 1`] = `
{
  key: "root",
  kind: "root",
  types: [
    {
      key: "root.Role",
      kind: "alias",
      name: "Role",
      parameters: [],
      type: {
        key: "root.Role.type",
        kind: "union",
        types: [
          {
            key: "root.Role.type.0",
            kind: "literal",
            type: "admin",
          },
          {
            key: "root.Role.type.1",
            kind: "literal",
            type: "user",
          },
        ],
      },
    },
    {
      key: "root.User",
      kind: "interface",
      name: "User",
      parameters: [],
      properties: [
        {
          name: "name",
          optional: false,
          structure: {
            key: "root.User.name",
            kind: "primitive",
            type: "string",
          },
        },
        {
          name: "age",
          optional: false,
          structure: {
            key: "root.User.age",
            kind: "nullable",
            type: {
              key: "root.User.age.type",
              kind: "primitive",
              type: "number",
            },
          },
        },
        {
          name: "group",
          optional: false,
          structure: {
            key: "root.User.group",
            kind: "ref",
            params: [],
            ref: "Group",
          },
        },
        {
          name: "maybeGroup",
          optional: false,
          structure: {
            key: "root.User.maybeGroup",
            kind: "nullable",
            type: {
              key: "root.User.maybeGroup.type",
              kind: "ref",
              params: [],
              ref: "Group",
            },
          },
        },
      ],
    },
    {
      key: "root.Group",
      kind: "interface",
      name: "Group",
      parameters: [],
      properties: [
        {
          name: "name",
          optional: false,
          structure: {
            key: "root.Group.name",
            kind: "primitive",
            type: "string",
          },
        },
        {
          name: "users",
          optional: false,
          structure: {
            items: {
              key: "root.Group.users.items",
              kind: "ref",
              params: [],
              ref: "User",
            },
            key: "root.Group.users",
            kind: "array",
          },
        },
      ],
    },
    {
      key: "root.Graph",
      kind: "interface",
      name: "Graph",
      parameters: [],
      properties: [
        {
          name: "group",
          optional: false,
          structure: {
            key: "root.Graph.group",
            kind: "ref",
            params: [],
            ref: "Group",
          },
        },
        {
          name: "user",
          optional: false,
          structure: {
            key: "root.Graph.user",
            kind: "ref",
            params: [],
            ref: "User",
          },
        },
        {
          name: "randomItem",
          optional: false,
          structure: {
            key: "root.Graph.randomItem",
            kind: "union",
            types: [
              {
                key: "root.Graph.randomItem.0",
                kind: "ref",
                params: [],
                ref: "User",
              },
              {
                key: "root.Graph.randomItem.1",
                kind: "ref",
                params: [],
                ref: "Group",
              },
            ],
          },
        },
      ],
    },
  ],
}
`;
